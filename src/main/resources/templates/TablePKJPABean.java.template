package ${tablebean.package};

import java.util.Set;
import java.util.Collection;
import java.util.List;
import java.util.Objects;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

// Hibernate Validator 5x is not compatible with validation-api 1.0.x
//import javax.validation.constraints.NotNull;
//import javax.validation.constraints.Size;

import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Class for mapping JPA Embedable PK of Table ${tablebean.name}.
 * 
 * @author Tracktopell::jpa-builder @see  https://github.com/tracktopell/jpa-builder
 * @version ${version}
 * @date ${date}
 */

${tablebean.jpa_entity_or_embeddeable}
${tablebean.jpa_talbe}
@XmlRootElement
public class ${tablebean.declaredName} implements java.io.Serializable {
    private static final long serialVersionUID = ${tablebean.serialId};
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.javadocCommnet}    
    ${tablebean.member.declaration}
    %endfor

    /** 
     * Default Constructor
     */
    public ${tablebean.declaredName}() {
    }
    
    /**
     * Getters and Setters
     */
    %foreach tablebean.member in ${tablebean.members}
    ${tablebean.member.getter}
    ${tablebean.member.setter}
    
    %endfor
    
    @Override
    public int hashCode() {
        int hash = 0;
        %foreach tablebean.member in ${tablebean.members}		
		hash += String.valueOf(${tablebean.member.javaIdentifier}).hashCode();
		%endfor
        return hash;
    }

	@Override
    public boolean equals(Object o){
		if (this == o) {
			return true;
	    }
		if (o == null) {
			return false;
		}
		if (getClass() != o.getClass()) {
			return false;
		}        
        if (!(o instanceof ${tablebean.declaredName})) {
            return false;
        }		
		${tablebean.declaredName} other = (${tablebean.declaredName} ) o;
		%foreach tablebean.member in ${tablebean.members}	
		if (!Objects.equals(this.${tablebean.member.javaIdentifier}, other.${tablebean.member.javaIdentifier})) { return false; }		
		%endfor
    	return true;
    }

	/**
	* to-do override using commons
	*/
    @Override
    public String toString() {
		StringBuilder sb=new StringBuilder();
		sb.append("${tablebean.declaredName}{");
		%foreach tablebean.member in ${tablebean.members}		
		sb.append("${tablebean.member.javaIdentifier}" ).append("=").append(${tablebean.member.javaIdentifier}).append("|");
		%endfor
		sb.append("serialVersionUID=").append(serialVersionUID).append("}");
		return sb.toString();
	}

}
